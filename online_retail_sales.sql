use prectise;
select * from sales_data;


-- ðŸ§© Task 1: Group Sales Data by Product Category
-- Objective: Group the sales data by product category to analyze performance.â€‹
select `Product Category`,count(`Product Category`) as category_count
from sales_data
group by `Product Category`
order by Category_count;

-- ðŸ§© Task 2: Calculate Total Revenue per Product
-- Objective: Calculate the total revenue generated by each product.â€‹
select `product name`,sum(`total revenue`)as total_revenue 
from sales_data
group by `product name`;

-- ðŸ§© Task 3: Count the Number of Orders per Product Category
-- Objective: Determine the number of orders placed for each product category.â€‹
select `product category`,count(`Transaction ID`) as no_of_order 
from sales_data
group by `product category`;

-- ðŸ§© Task 4: Identify Top 5 Products by Revenue
-- Objective: Identify the top 5 products that generated the highest revenue.â€‹
select `product name`,round(sum(`total revenue`)) as revenue
from sales_data
group by `product name`
order by revenue desc
limit 5;

-- ðŸ§© Task 5: Calculate Average Order Value per Product Category
-- Objective: Calculate the average order value for each product category.â€‹
select `product category`,ROUND(SUM(`Total Revenue`) / 
COUNT(DISTINCT `Transaction ID`), 2) as avg_order_value
from sales_data
group by `product category`
order by avg_order_value desc;

-- ðŸ§© Task 6: Count Distinct Customers per Product Category
-- Objective: Determine the number of unique customers who purchased each product category.â€‹
select `product category`, count(distinct `transaction id`) as unique_customer
from sales_data
group by `product category`;




-- ðŸ§© Task 7: Calculate Total Revenue for Each Month
-- Objective: Calculate the total revenue generated in each month.â€‹
select extract(month from date) as Month,round(sum(`total revenue`)) as total_revenue
from sales_data
group by Month;

-- ðŸ§© Task 8: Count the Number of Orders per Month
-- Objective: Determine the number of orders placed in each month.â€‹

select extract(month from date) as Month,
count(`Transaction ID`) as No_of_orders
from sales_data
group by Month;

-- ðŸ§© Task 9: Calculate Total Revenue for Each Region
-- Objective: Calculate the total revenue generated in each region.â€‹

select region,round(sum(`total revenue`)) as total_revenue
from sales_data
group by region;

-- ðŸ§© Task 10: Identify the Product with the Highest Revenue
-- Objective: Identify the product that generated the highest revenue.â€‹
select `Product Name`,round(sum(`total revenue`))
as Highest_revenue
from sales_data
group by `Product Name`
order by Highest_revenue desc
limit 1;	

-- ðŸ§© Task 11: Calculate the Number of Orders per Payment Method
-- Objective: Determine the number of orders placed using each payment method.â€‹
select `payment method`,count(`transaction id`) 
as 	No_of_Payment_Method
from sales_data
group by `payment method`
order by No_of_Payment_Method desc;



-- ðŸ§© Task 12: Calculate Total Revenue for Each Quarter
-- Objective: Calculate the total revenue generated in each quarter.â€‹
select extract(year from date) as revenue_year,
EXTRACT(QUARTER FROM date) AS revenue_quarter,
round( SUM(`total revenue`))AS total_revenue
FROM sales_data
GROUP BY revenue_year,revenue_quarter
ORDER BY revenue_year,revenue_quarter;


-- ðŸ§© Task 13: Monthly Revenue and Order Volume
-- Objective: Calculate the total revenue and the number of unique orders for each month.
select extract(year from `date`) as year,
extract(month from `Date`) as month,
round(sum(`total revenue`),2) as total_revenue,
count(distinct `transaction id`) as unique_orders
from sales_data
group by year,month
order by year,month;

